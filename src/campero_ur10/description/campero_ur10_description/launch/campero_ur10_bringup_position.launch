<?xml version="1.0"?>
<launch>
    <arg name="debug" default="false" />
    <arg unless="$(arg debug)" name="launch_prefix" value=""/>
    <arg if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args"/>
    
    <!--arg name="robot_id" default="campero"/-->
    <arg name="robot_ip" default="192.168.0.210" doc="IP address by which the robot can be reached."/>
    
    <arg name="controller_config_file" default="$(find campero_ur10_description)/config/ur10_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>

    <arg name="kinematics_config" default="$(find campero_ur10_description)/config/campero_ur10_calibration.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
    <arg name="robot_description_file" default="$(find campero_ur10_description)/robots/campero_ur10.urdf.xacro" doc="Robot description urdf xacro."/>

     <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface"/>
    
    <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller" doc="Controllers that are activated by default."/>

    <arg name="reverse_port" default="50001" doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>
    <arg name="script_sender_port" default="50002" doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>
    
    <arg name="tf_prefix" default="" doc="tf_prefix used for the robot."/>

    <arg name="stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller" doc="Controllers that are initally loaded, but not started."/>


    <!-- Load urdf on the parameter server -->
    <param name="robot_description"
        command="$(find xacro)/xacro --inorder '$(arg robot_description_file)' transmission_hw_interface:=$(arg transmission_hw_interface) kinematics_config:=$(arg kinematics_config)"/>


    <!-- Robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <!-- Load the driver --> 
    <include file="$(find ur_robot_driver)/launch/ur_control.launch">
        <arg name="debug" value="$(arg debug)"/>
        <arg name="use_tool_communication" value="false"/> 
        <arg name="controller_config_file" value="$(arg controller_config_file)"/>
        <arg name="robot_ip" value="$(arg robot_ip)"/>
        <arg name="reverse_port" value="$(arg reverse_port)"/>
        <arg name="script_sender_port" value="$(arg script_sender_port)"/>
        <arg name="kinematics_config" value="$(arg kinematics_config)"/>
        <arg name="tf_prefix" value="$(arg tf_prefix)"/>
        <arg name="controllers" value="$(arg controllers)"/>
        <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
        <arg name="headless_mode" value="false"/>

    </include>
</launch>
